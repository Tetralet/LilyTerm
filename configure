#!/bin/bash

PACKAGE=`grep "^PACKAGE = " .default | awk -F ' = ' '{print $2}'`
PREFIX=`grep "^PREFIX = " .default | awk -F ' = ' '{print $2}'`
DATADIR=`grep "^DATADIR = " .default | awk -F ' = ' '{print $2}'`
ETCDIR=`grep "^ETCDIR = " .default | awk -F ' = ' '{print $2}'`

GTK=gtk+-2.0

DEBUG=N
NLS=Y
SAFEMODE=Y
STRIP=N
GNOME_CONTROL_CENTER=Y

GTK_SPC=0
NLS_SPC=0
GNOME_CONTROL_CENTER_SPC=0

if [ -z "$CC" ]; then
  CC=gcc
fi

if [ -z "$CFLAGS" ]; then
  CFLAGS="-Wall -O -g"
fi

MAKE=`which make`
ECHO=`which echo`
PRINTF=`which printf`

ERR()
{
  $PRINTF "\x1b\x5b1;31m$1\x1b\x5b0m" >&2
}

WARN()
{
  $PRINTF "\x1b\x5b1;35m$1\x1b\x5b0m"
}

INFO()
{
  $PRINTF "\x1b\x5b1;36m$1\x1b\x5b0m"
}

IMPORTANT()
{
  $PRINTF "\x1b\x5b1;33m$1\x1b\x5b0m"
}

NORMAL()
{
  $PRINTF "\x1b\x5b1;32m$1\x1b\x5b0m"
}

if [ "$1" = "-h" -o "$1" = "--help" -o "$1" = "-help" ]; then
  WARN "Usage: $0 [OPTION]... [VAR=VALUE]...\n"
  $ECHO ""
  $ECHO "Installation directories:"
  $ECHO "  `INFO '--prefix=PREFIX'`     : install in PREFIX (e.g. /usr) `NORMAL '[default: /usr/local]'`"
  $ECHO "  `INFO '--sysconfdir=ETCDIR'` : system conf file install dir `NORMAL '[default: $PREFIX/etc/xdg]'`"
  $ECHO ""
  $ECHO "Optional Packages:"
  $ECHO "  `INFO '--with-gtk=2.0|3.0'`  : which gtk+ version to compile against `NORMAL '[default: 2.0]'`"
  $ECHO ""
  $ECHO "Optional Features:"
  $ECHO "  `INFO '--enable-debug'`      : enable debug mode `NORMAL '[default: disable]'`"
  $ECHO "  `INFO '--disable-nls'`       : disable Native Language Support `NORMAL '[default: enable]'`"
  $ECHO "  `INFO '--disable-safe-mode'` : disable run in safe mode `NORMAL '[default: enable]'`"
  $ECHO ""
  $ECHO "run \``IMPORTANT 'make'`' to build $PACKAGE, include binary, data and translations."
  $ECHO "run \``IMPORTANT 'make src'`' to build $PACKAGE binary files."
  $ECHO "run \``IMPORTANT 'make data'`' to build $PACKAGE data files."
  $ECHO "run \``IMPORTANT 'make po'`' to build $PACKAGE translation files."
  $ECHO ""
  $ECHO "run \``IMPORTANT 'make clean'`' to clean $PACKAGE builded files."
  $ECHO "run \``IMPORTANT 'make distclean'`' to clean $PACKAGE builded and configure files."
  $ECHO ""
  $ECHO "run \``IMPORTANT 'make install'`' to install $PACKAGE to your system."
  $ECHO "run \``IMPORTANT 'make uninstall'`' to unstall $PACKAGE in `NORMAL "$PREFIX"` from your system."
  $ECHO ""
  exit 0
fi

PKGCONFIG=`which pkg-config`
if [ -z "$PKGCONFIG" ]; then
  $ECHO ""
  ERR "ERROR: pkg-config package is needed to run this configure script. ABORT!\n"
  $ECHO ""
  exit 1
fi

for opt do
  case "$opt" in
    --enable-debug)
      DEBUG=Y
      ;;
    --disable-debug)
      DEBUG=N
      ;;
    --prefix=*)
      PREFIX=`$ECHO $opt | cut -d '=' -f 2`
      ;;
    --sysconfdir=*)
      ETCDIR=`$ECHO $opt | cut -d '=' -f 2`
      ;;
    --with-gtk=2.0)
      GTK_SPC=1
      ;;
    --with-gtk=3.0)
      GTK=gtk+-3.0
      GTK_SPC=1
      ;;
    --enable-nls)
      NLS_SPC=1
      ;;
    --disable-nls)
      NLS=N
      ;;
    --disable-safe-mode)
      SAFEMODE=N
      ;;
    --enable-strip)
      STRIP=Y
      ;;
    --enable-gnome-control-center)
      GNOME_CONTROL_CENTER_SPC=1
      ;;
    --disable-gnome-control-center)
      GNOME_CONTROL_CENTER=N
      ;;
    *)
      $ECHO ""
      ERR "ERROR: invalid option \"$opt\". ABORT!\n"
      $ECHO ""
      exit 1
      ;;
  esac
done

$ECHO ""

# ---- Build Requirement ---- #

$PKGCONFIG --exists 'glib-2.0 >= 2.12' > /dev/null 2>&1
if [ $? != 0 ]; then
  ERR "ERROR: Glib > 2.12 is needed to build $PACKAGE.\n"
  $ECHO ""
  exit 1
fi

# ---- GTK ---- #

if [ "$GTK" = "gtk+-2.0" ]; then
  $ECHO -n "... testing GTK+2    : "
else
  $ECHO -n "... testing GTK+3    : "
fi

$PKGCONFIG --cflags $GTK > /dev/null 2>&1
if [ $? != 0 ]; then
  if [ "$GTK" = "gtk+-2.0" -a $GTK_SPC -eq 0 ]; then
    $ECHO "not found. Trying GTK+3..."
    GTK=gtk+-3.0
    $ECHO -n "... testing GTK+3    : "
    $PKGCONFIG --cflags $GTK > /dev/null 2>&1
    if [ $? != 0 ]; then
      ERR "not found. Please install libgtk2.0-dev/libgtk-3-dev package. ABORT!\n"
      $ECHO ""
      exit 1
    else
      WARN "found. But using Gtk+3 to build $PACKAGE is NOT recommend.\n"
    fi
  else
    if [ "$GTK" = "gtk+-2.0" ]; then
      ERR "not found. Please install libgtk2.0-dev package. ABORT!\n"
    else
      ERR "not found. Please install libgtk-3-dev package. ABORT!\n"
    fi
    $ECHO ""
    exit 1
  fi
else
  if [ "$GTK" = gtk+-2.0 ]; then
    $PKGCONFIG --exists 'gtk+-2.0 >= 2.8' > /dev/null 2>&1
    if [ $? != 0 ]; then
      ERR "ERROR: Gtk+2 > 2.8 is needed to build $PACKAGE.\n"
      $ECHO ""
      exit 1
    fi

    $PKGCONFIG --exists 'gtk+-2.0 < 2.12' > /dev/null 2>&1
    if [ $? != 0 ]; then
      INFO "found.\n"
    else
      WARN "found. But using Gtk+2 > 2.12 is recommend to build $PACKAGE.\n"
    fi
  else
    WARN "found. But using Gtk+3 to build $PACKAGE is NOT recommend.\n"
  fi
fi


# ---- VTE ---- #

if [ "$GTK" = 'gtk+-2.0' ]; then
  $ECHO -n "... testing VTE      : "
  VTE=vte
else
  $ECHO -n "... testing VTE 0.29 : "
  VTE=vte-2.90
fi

$PKGCONFIG --cflags $VTE > /dev/null 2>&1
if [ $? != 0 ]; then
  if [ "$GTK" = 'gtk+-2.0' ]; then
    ERR "not found. Please install libvte-dev package. ABORT!\n"
  else
    ERR "not found. Please install libvte-2.90-dev package. ABORT!\n"
  fi
  $ECHO ""
  exit 1
else
  if [ "$GTK" = 'vte' ]; then
    $PKGCONFIG --exists 'vte >= 0.12' > /dev/null 2>&1
    if [ $? != 0 ]; then
      ERR "ERROR: VTE > 0.12 is needed to build $PACKAGE.\n"
      $ECHO ""
      exit 1
    fi
  fi

  INFO "found.\n"
fi


# ---- NLS ---- #

if [ "$NLS" = 'Y' ]; then
  $ECHO -n "... testing Native Language Support : "
  GETTEXT=`which msgfmt`
  if [ -z "$GETTEXT" ]; then
    if [ $NLS_SPC -eq 1 ]; then
      ERR "not found. Please install gettext package. ABORT!\n"
      $ECHO ""
      exit 1
    fi
    WARN "not found.\n"
    NLS=N
  else
    INFO "found.\n"
  fi
fi


# ---- GNOME_CONTROL_CENTER ---- #

if [ "$GNOME_CONTROL_CENTER" = 'Y' ]; then
  $ECHO -n "... testing Gnome Control Center    : "
  GNOME_CONTROL_CENTER_DIR=`pkg-config --variable=defappsdir --define-variable=datadir='$(DATADIR)' gnome-default-applications`
  if [ $? != 0 ]; then
    if [ $GNOME_CONTROL_CENTER_SPC -eq 1 ]; then
      ERR "not found. Please install gnome-control-center-dev package. ABORT!\n"
      $ECHO ""
      exit 1
    fi
    WARN "not found.\n"
    GNOME_CONTROL_CENTER=N
  else
    INFO "found.\n"
  fi
fi

$ECHO ""

# ---- REPORT ---- #

INFO "===========================================\n"
IMPORTANT "PREFIX    = $PREFIX\n"
IMPORTANT "ETCDIR    = $ETCDIR\n"
if [ "$DEBUG" = 'Y' ]; then
  IMPORTANT "DEBUG     = $DEBUG\n"
else
  $ECHO "DEBUG     = $DEBUG"
fi
if [ "$NLS" = 'N' ]; then
  IMPORTANT "NLS       = $NLS\n"
else
  $ECHO "NLS       = $NLS"
fi
if [ "$SAFEMODE" = 'N' ]; then
  IMPORTANT "SAFEMODE  = $SAFEMODE\n"
else
  $ECHO "SAFEMODE  = $SAFEMODE"
fi
if [ "$STRIP" = 'Y' ]; then
  IMPORTANT "STRIP     = $STRIP\n"
fi
CHECK_CC=`which "$CC"`
if [ -n "$CHECK_CC" ]; then
  if [ "$CC" != 'gcc' ]; then
    IMPORTANT "CC        = $CC\n"
  fi
else
  ERR "CC        = $CC\n"
fi
if [ "$CFLAGS" != '-Wall -O -g' ]; then
  IMPORTANT "CFLAGS    = $CFLAGS\n"
else
  $ECHO "CFLAGS    = $CFLAGS"
fi
if [ -z "$MAKE" ]; then
 ERR "MAKE      = $MAKE\n"
fi
$ECHO "GTK       = $GTK"
$ECHO "VTE       = $VTE"
if [ "$GNOME_CONTROL_CENTER" = 'Y' ]; then
  IMPORTANT "GNOME_CONTROL_CENTER     = $GNOME_CONTROL_CENTER\n"
  IMPORTANT "GNOME_CONTROL_CENTER_DIR = $GNOME_CONTROL_CENTER_DIR\n"
fi
INFO "===========================================\n"
$ECHO ""

$ECHO "PREFIX = $PREFIX" > .config
$ECHO "ETCDIR = $ETCDIR" >> .config
$ECHO "NLS = $NLS" >> .config
$ECHO "DEBUG = $DEBUG" >> .config
$ECHO "NLS = $NLS" >> .config
$ECHO "SAFEMODE = $SAFEMODE" >> .config
$ECHO "STRIP = $STRIP" >> .config
$ECHO "CC = $CC" >> .config
$ECHO "CFLAGS = $CFLAGS" >> .config
$ECHO "MAKE = $MAKE" >> .config
$ECHO "GTK = $GTK" >> .config
$ECHO "VTE = $VTE" >> .config
$ECHO "GNOME_CONTROL_CENTER = $GNOME_CONTROL_CENTER" >> .config
$ECHO "GNOME_CONTROL_CENTER_DIR = $GNOME_CONTROL_CENTER_DIR" >> .config

